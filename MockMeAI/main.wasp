app MockMeAI {
  wasp: {
    version: "^0.11.1"
  },
  title: "MockMeAI",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id         Int         @id @default(autoincrement())
    username   String      @unique
    password   String
    interviews Interview[]
psl=}

entity Interview {=psl
    id             Int        @id @default(autoincrement())
    userId         Int
    jobDescription String
    resume         String
    jobLevel       String
    questions      Question[]
    user           User       @relation(fields: [userId], references: [id])
psl=}

entity Question {=psl
    id             Int       @id @default(autoincrement())
    interviewId    Int
    content        String
    expectedAnswer String
    userResponse   String
    score          Int
    interview      Interview @relation(fields: [interviewId], references: [id])
psl=}

action createInterview {
  fn: import { createInterview } from "@server/actions.js",
  entities: [Interview, Question]
}

action submitResponse {
  fn: import { submitResponse } from "@server/actions.js",
  entities: [Interview, Question]
}

query getInterview {
  fn: import { getInterview } from "@server/queries.js",
  entities: [Interview, Question]
}

query getUserInterviews {
  fn: import { getUserInterviews } from "@server/queries.js",
  entities: [User, Interview]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { Home } from "@client/pages/Home.jsx",
  authRequired: false
}

route NewInterviewRoute { path: "/new-interview", to: NewInterviewPage }
page NewInterviewPage {
  component: import { NewInterviewPage } from "@client/pages/NewInterview.jsx",
  authRequired: true
}

route InterviewResponseRoute { path: "/interview/:interviewId/result", to: InterviewResponsePage }
page InterviewResponsePage {
  component: import { InterviewResponsePage } from "@client/pages/InterviewResponse.jsx",
  authRequired: true
}

route PastInterviewsRoute { path: "/past-interviews", to: PastInterviewsPage }
page PastInterviewsPage {
  component: import { PastInterviews } from "@client/pages/PastInterviews.jsx",
  authRequired: true
}
